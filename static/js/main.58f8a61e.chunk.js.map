{"version":3,"sources":["Loading.js","Card.js","Error.js","App.js","index.js"],"names":["Loading","className","Card","props","title","style","backgroundImage","image","rating","year","description","Error","displayError","App","state","movies","loading","search","componentDidMount","a","fetch","serverData","json","response","setState","data","console","log","filterMovies","event","target","value","this","filteredMovies","filter","movie","toLocaleLowerCase","indexOf","action","htmlFor","type","id","onChange","map","index","key","medium_cover_image","summary","Component","ReactDOM","render","document","getElementById"],"mappings":"qXAWeA,G,kBARC,WACZ,OACI,yBAAKC,UAAU,qBACX,uBAAGA,UAAU,WAAb,iBCWGC,G,MAdF,SAAAC,GACT,OACI,yBAAKF,UAAU,QACX,wBAAIA,UAAU,SAASE,EAAMC,OAC7B,yBAAKH,UAAU,UAAUI,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAMI,MAAf,QACjD,yBAAKN,UAAU,OACX,uBAAGA,UAAU,UAAb,WAA8B,8BAAOE,EAAMK,SAC3C,uBAAGP,UAAU,QAAb,SAA0B,8BAAOE,EAAMM,QAE3C,yBAAKR,UAAU,eAAeE,EAAMO,gBCDjCC,G,MARD,SAAAR,GACV,OACI,yBAAKF,UAAU,mBACX,uBAAGA,UAAU,SAASE,EAAMS,iBCCnBC,E,2MACnBC,MAAQ,CACNC,OAAQ,GACRC,SAAS,EACTJ,cAAc,EACdK,OAAQ,I,EAGVC,kB,sBAAoB,8BAAAC,EAAA,+EAESC,MAAM,0CAFf,cAEVC,EAFU,gBAGOA,EAAWC,OAHlB,OAGVC,EAHU,OAIhB,EAAKC,SAAS,CAAET,OAAQQ,EAASE,KAAKV,SACtCW,QAAQC,IAAI,EAAKb,MAAMC,QALP,kDAOhB,EAAKS,SAAS,CAAEZ,aAAc,uCAPd,QASlB,EAAKY,SAAS,CAAER,SAAS,IATP,0D,EAYpBY,aAAe,SAAAC,GACb,EAAKL,SAAS,CAAEP,OAASY,EAAMC,OAAOC,S,wEAI9B,IAAD,OAEP,IAA2B,IAAvBC,KAAKlB,MAAME,QACb,OAAO,kBAAC,EAAD,MAGJ,IAAgC,IAA5BgB,KAAKlB,MAAMF,aAClB,OAAO,kBAAC,EAAD,CAAOA,aAAcoB,KAAKlB,MAAMF,eAGzC,IAAIqB,EAAiBD,KAAKlB,MAAMC,OAAOmB,QAAO,SAAAC,GAAK,OAAwF,IAApFA,EAAM/B,MAAMgC,oBAAoBC,QAAQ,EAAKvB,MAAMG,OAAOmB,wBAEjH,OACE,yBAAKnC,UAAU,aACb,2CACA,0BAAMqC,OAAO,KACX,2BAAOC,QAAQ,SACb,wCACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,SAAUV,KAAKJ,iBAGjD,yBAAK3B,UAAU,WAEXgC,EAAeU,KAAI,SAACR,EAAOS,GACzB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAOxC,MAAO+B,EAAM/B,MAAOG,MAAO4B,EAAMW,mBAAoBtC,OAAQ2B,EAAM3B,OAAQC,KAAM0B,EAAM1B,KAAMC,YAAayB,EAAMY,mB,GAjDtHC,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.58f8a61e.chunk.js","sourcesContent":["import React from 'react'\nimport './Loading.css'\n\nconst Loading = () => {\n    return (\n        <div className=\"container-loading\">\n            <p className=\"loading\">Loading...</p>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\nimport './Card.css'\n\nconst Card = props => {\n    return (\n        <div className=\"card\">\n            <h2 className=\"title\">{props.title}</h2>\n            <div className=\"picture\" style={{ backgroundImage: `url(${props.image})` }}></div>\n            <div className=\"box\">\n                <p className=\"rating\">Rating: <span>{props.rating}</span></p>\n                <p className=\"year\">Year: <span>{props.year}</span></p>\n            </div>\n            <div className=\"description\">{props.description}</div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from 'react'\nimport './Error.css'\n\nconst Error = props => {\n    return (\n        <div className=\"container-error\">\n            <p className=\"error\">{props.displayError}</p>\n        </div>\n    )\n};\n\nexport default Error;","import React, { Component } from 'react'\nimport './third-party/reset.css'\nimport './App.css'\nimport Loading from './Loading'\nimport Card from './Card'\nimport Error from './Error'\n\nexport default class App extends Component {\n  state = {\n    movies: [],\n    loading: true,\n    displayError: false,\n    search: ''\n  }\n\n  componentDidMount = async () => {\n    try {\n      const serverData = await fetch('https://yts.mx/api/v2/list_movies.json');\n      const response = await serverData.json();\n      this.setState({ movies: response.data.movies });\n      console.log(this.state.movies);\n    } catch (err) {\n      this.setState({ displayError: 'ERROR: Something seems to be wrong' })\n    }\n    this.setState({ loading: false });\n  }\n\n  filterMovies = event => {\n    this.setState({ search: (event.target.value) });\n    // console.log(this.state.search);\n  }\n\n  render() {\n    // display loading while waiting for fetching the data\n    if (this.state.loading === true) {\n      return <Loading />\n    }\n    // display an error if the data can't be fetched\n    else if (this.state.displayError !== false) {\n      return <Error displayError={this.state.displayError} />\n    }\n    // filtering movies: indexOf whatever is in this.state.search and if it's not -1 (which would mean that it doesn' exist)\n    let filteredMovies = this.state.movies.filter(movie => movie.title.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1);\n\n    return (\n      <div className=\"container\">\n        <h1>Blockbuster</h1>\n        <form action=\"#\">\n          <label htmlFor=\"films\">\n            <span>Filter</span>\n            <input type=\"text\" id=\"films\" onChange={this.filterMovies} />\n          </label>\n        </form>\n        <div className=\"wrapper\">\n          {\n            filteredMovies.map((movie, index) => {\n              return <Card key={index} title={movie.title} image={movie.medium_cover_image} rating={movie.rating} year={movie.year} description={movie.summary} />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}